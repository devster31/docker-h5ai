FROM alpine:3.12

# version args
ARG H5AI_VER
# version args for s6 overlay
ARG S6_OVERLAY_VER
ARG S6_OVERLAY_ARCH="amd64"

LABEL \
    org.opencontainers.image.h5ai.version="${H5AI_VER}" \
    org.opencontainers.image.s6-overlay.version="${S6_OVERLAY_VER}" \
    maintainer="devster31"

# environment settings
ENV HOME="/config" \
    XDG_CONFIG_HOME="/config" \
    XDG_DATA_HOME="/config" \
    H5AI_VER="${H5AI_VER}" \
    S6_OVERLAY_VER="${S6_OVERLAY_VER}"

RUN \
    set -eux \
    && \
    apk add --update --no-cache \
        bash \
        curl \
        nginx \
        patch \
        php7-fpm \
        php7-json \
        php7-session \
        shadow \
    && \
    echo "*** add nginx conf ****" \
    && { \
        echo -e 'server {'; \
        echo -e '\tlisten [::]:80 default_server deferred;'; \
        echo -e '\tlisten 80 default_server deferred;'; \
        echo; \
        echo -e '\tserver_name _;'; \
        echo -e '\troot /var/lib/nginx/html/;'; \
        echo -e '\tindex index.html /_h5ai/public/index.php;'; \
        echo -e '\ttry_files $uri $uri/ =404;'; \
        echo; \
        echo -e '\tlocation / {'; \
        echo -e '\t\tautoindex  on;'; \
        echo -e '\t}'; \
        echo; \
        echo -e '\tlocation ~* ^/_h5ai.*\.php(\/|$) {'; \
        echo -e '\t\tinclude fastcgi.conf;'; \
        echo -e '\t\tfastcgi_pass 127.0.0.1:9000;'; \
        echo -e '\t}'; \
        echo -e '}'; \
        echo; \
    } | tee "/etc/nginx/conf.d/default.conf" \
    && mkdir -p /run/nginx \
    && nginx -t \
    # forward request and error logs to docker log collector
    && ln -sf /dev/stdout /var/log/nginx/access.log \
    && ln -sf /dev/stderr /var/log/nginx/error.log \
    && \
    echo "**** install h5ai and patch configuration ****" \
    && curl -sSL -o \
        /tmp/h5ai.zip \
            "http://release.larsjung.de/h5ai/h5ai-${H5AI_VER}.zip" \
    && unzip /tmp/h5ai.zip -d /var/lib/nginx/html/ \
    && sed -i "s#'ROOT_PATH.*#'ROOT_PATH', '/var/lib/nginx/html');#" /var/lib/nginx/html/_h5ai/private/php/core/class-setup.php \
    && sed -i "s#options = Json::load.*#options = Json::load('/config/options.json');#" /var/lib/nginx/html/_h5ai/private/php/core/class-context.php \
    && sed -i '$!N;s#"download": {\n        "enabled": true,#"download": {\n        "enabled": false#;P;D' /var/lib/nginx/html/_h5ai/private/conf/options.json \
    && sed -i '$!N;s#"l10n": {\n        "enabled": true,#"l10n": {\n        "enabled": false#;P;D' /var/lib/nginx/html/_h5ai/private/conf/options.json \
    && sed -i '$!N;s#"select": {\n        "enabled": true,#"select": {\n        "enabled": false#;P;D' /var/lib/nginx/html/_h5ai/private/conf/options.json \
    && sed -i '$!N;s#"tree": {\n        "enabled": true,#"tree": {\n        "enabled": false#;P;D' /var/lib/nginx/html/_h5ai/private/conf/options.json \
    && chown -R nginx:nginx /var/lib/nginx/ \
    && sed -i 's/user = nobody/user = nginx/' /etc/php7/php-fpm.d/www.conf \
    && sed -i 's/group = nobody/group = nginx/' /etc/php7/php-fpm.d/www.conf \
    && \
    echo "**** add s6 overlay ****" \
    && curl -sSL -o \
        /tmp/s6-overlay.tar.gz \
            "https://github.com/just-containers/s6-overlay/releases/download/v${S6_OVERLAY_VER}/s6-overlay-${S6_OVERLAY_ARCH}.tar.gz" \
    && tar -xzvf \
        /tmp/s6-overlay.tar.gz -C / \
    && \
    rm -frv \
        /var/tmp/* \
        /tmp/*

# copy local files
COPY root/ /

EXPOSE 80
VOLUME /config

ENTRYPOINT [ "/init" ]
